/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GamePack.TicTacToe;

/**
 *
 * @author Lenovo
 */
public class CrossZero extends javax.swing.JFrame {

    /**
     * Creates new form CrossZero
     */
    
    int playerCnt=1;
    int count=0;
    boolean won=false;
    
    public javax.swing.JButton btArr[][]=new javax.swing.JButton[3][3];
    
    public CrossZero() {
        initComponents();
        
        btArr[0][0]=bt1;
        btArr[0][1]=bt2;
        btArr[0][2]=bt3;
        btArr[1][0]=bt4;
        btArr[1][1]=bt5;
        btArr[1][2]=bt6;
        btArr[2][0]=bt7;
        btArr[2][1]=bt8;
        btArr[2][2]=bt9;
        
        // TODO add your handling code here:
        for(int i=0;i<3;++i){
            for(int j=0;j<3;++j)
                btArr[i][j].setVisible(false);
        }
        restart.setVisible(false);               
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bt1 = new javax.swing.JButton();
        bt4 = new javax.swing.JButton();
        bt7 = new javax.swing.JButton();
        bt2 = new javax.swing.JButton();
        bt5 = new javax.swing.JButton();
        bt8 = new javax.swing.JButton();
        bt3 = new javax.swing.JButton();
        bt6 = new javax.swing.JButton();
        bt9 = new javax.swing.JButton();
        btStart = new javax.swing.JButton();
        player = new javax.swing.JLabel();
        result = new javax.swing.JLabel();
        restart = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        bt1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt1ActionPerformed(evt);
            }
        });

        bt4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt4ActionPerformed(evt);
            }
        });

        bt7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt7ActionPerformed(evt);
            }
        });

        bt2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt2ActionPerformed(evt);
            }
        });

        bt5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt5ActionPerformed(evt);
            }
        });

        bt8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt8ActionPerformed(evt);
            }
        });

        bt3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt3ActionPerformed(evt);
            }
        });

        bt6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt6ActionPerformed(evt);
            }
        });

        bt9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt9ActionPerformed(evt);
            }
        });

        btStart.setText("START");
        btStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btStartActionPerformed(evt);
            }
        });

        restart.setText("PLAY AGAIN");
        restart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                restartActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(result, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btStart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(player, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(restart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(bt1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bt2, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bt3, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(bt4, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(bt7, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(bt5, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(bt8, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(bt6, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(bt9, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(62, 62, 62))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btStart, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(restart, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bt4, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bt7, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bt3, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bt2, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bt1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(bt5, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bt8, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(bt6, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bt9, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(player, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addComponent(result, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btStartActionPerformed
        // TODO add your handling code here:
        for(int i=0;i<3;++i){
            for(int j=0;j<3;++j)
                btArr[i][j].setVisible(true);
        }
        player.setText("Player 1");
    }//GEN-LAST:event_btStartActionPerformed

    private void bt1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt1ActionPerformed
        // TODO add your handling code here:
        /*if(value(0,0).equals("")){
            System.out.println("I am not null");
        }*/
        if(value(0,0).equals("") && count<9){
            if(playerCnt==1){
                bt1.setText("X");
                playerCnt++;
            }else{
                bt1.setText("O");
                playerCnt=1;
            }
            count++;
            if(checkHorizontal(0,0)){
                result.setText(getWinner(playerCnt)+" WINS");
                count=10;
            }else if(checkVertical(0,0)){
                result.setText(getWinner(playerCnt)+" WINS");
                count=10;
            }else if(checkMainDiagnol(0,0)){
               result.setText(getWinner(playerCnt)+" WINS");
                count=10; 
            }
            
            if(count<9)
                setPlayer(playerCnt);
            else if(won==false)
            {
                result.setText("GAME TIED");
                getWinner(playerCnt);
            }
        }
    }//GEN-LAST:event_bt1ActionPerformed

    private void bt2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt2ActionPerformed
        // TODO add your handling code here:
        if(value(0,1).equals("") && count<9){
            if(playerCnt==1){
                bt2.setText("X");
                playerCnt++;
            }else{
                bt2.setText("O");
                playerCnt=1;
            }
            count++;
            if(checkHorizontal(0,1)){
                result.setText(getWinner(playerCnt)+" WINS");
                count=10;
            }else if(checkVertical(0,1)){
                result.setText(getWinner(playerCnt)+" WINS");
                count=10;
            }
            
            if(count<9)
                setPlayer(playerCnt);
            else if(won==false)
            {
                result.setText("GAME TIED");
                getWinner(playerCnt);
            }
        }
    }//GEN-LAST:event_bt2ActionPerformed

    private void bt3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt3ActionPerformed
        // TODO add your handling code here:
        if(value(0,2).equals("") && count<9){
            if(playerCnt==1){
                bt3.setText("X");
                playerCnt++;
            }else{
                bt3.setText("O");
                playerCnt=1;
            }
            count++;
            if(checkHorizontal(0,2)){
                result.setText(getWinner(playerCnt)+" WINS");
                count=10;
            }else if(checkVertical(0,2)){
                result.setText(getWinner(playerCnt)+" WINS");
                count=10;
            }else if(checkTDiagnol(0,2)){
               result.setText(getWinner(playerCnt)+" WINS");
                count=10; 
            }
            
            if(count<9)
                setPlayer(playerCnt);
            else if(won==false)
            {
                result.setText("GAME TIED");
                getWinner(playerCnt);
            }
        }
    }//GEN-LAST:event_bt3ActionPerformed

    private void bt4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt4ActionPerformed
        // TODO add your handling code here:
        if(value(1,0).equals("") && count<9){
            if(playerCnt==1){
                bt4.setText("X");
                playerCnt++;
            }else{
                bt4.setText("O");
                playerCnt=1;
            }
            count++;
            if(checkHorizontal(1,0)){
                result.setText(getWinner(playerCnt)+" WINS");
                count=10;
            }else if(checkVertical(1,0)){
                result.setText(getWinner(playerCnt)+" WINS");
                count=10;
            }
            
            if(count<9)
                setPlayer(playerCnt);
            else if(won==false)
            {
                result.setText("GAME TIED");
                getWinner(playerCnt);
            }
        }
    }//GEN-LAST:event_bt4ActionPerformed

    private void bt5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt5ActionPerformed
        // TODO add your handling code here:
        if(value(1,1).equals("") && count<9){
            if(playerCnt==1){
                bt5.setText("X");
                playerCnt++;
            }else{
                bt5.setText("O");
                playerCnt=1;
            }
            count++;
            if(checkHorizontal(1,1)){
                result.setText(getWinner(playerCnt)+" WINS");
                count=10;
            }else if(checkVertical(1,1)){
                result.setText(getWinner(playerCnt)+" WINS");
                count=10;
            }else if(checkMainDiagnol(1,1)){
               result.setText(getWinner(playerCnt)+" WINS");
                count=10; 
            }else if(checkTDiagnol(1,1)){
               result.setText(getWinner(playerCnt)+" WINS");
                count=10; 
            }
            
            if(count<9)
                setPlayer(playerCnt);
            else if(won==false)
            {
                result.setText("GAME TIED");
                getWinner(playerCnt);
            }
        }
    }//GEN-LAST:event_bt5ActionPerformed

    private void bt6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt6ActionPerformed
        // TODO add your handling code here:
        if(value(1,2).equals("") && count<9){
            if(playerCnt==1){
                bt6.setText("X");
                playerCnt++;
            }else{
                bt6.setText("O");
                playerCnt=1;
            }
            count++;
            if(checkHorizontal(1,2)){
                result.setText(getWinner(playerCnt)+" WINS");
                count=10;
            }else if(checkVertical(1,2)){
                result.setText(getWinner(playerCnt)+" WINS");
                count=10;
            }
            
            if(count<9)
                setPlayer(playerCnt);
            else if(won==false)
            {
                result.setText("GAME TIED");
                getWinner(playerCnt);
            }
        }
    }//GEN-LAST:event_bt6ActionPerformed

    private void bt7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt7ActionPerformed
        // TODO add your handling code here:
        if(value(2,0).equals("") && count<9){
            if(playerCnt==1){
                bt7.setText("X");
                playerCnt++;
            }else{
                bt7.setText("O");
                playerCnt=1;
            }
            count++;
            if(checkHorizontal(2,0)){
                result.setText(getWinner(playerCnt)+" WINS");
                count=10;
            }else if(checkVertical(2,0)){
                result.setText(getWinner(playerCnt)+" WINS");
                count=10;
            }else if(checkTDiagnol(2,0)){
               result.setText(getWinner(playerCnt)+" WINS");
                count=10; 
            }
            
            if(count<9)
                setPlayer(playerCnt);
            else if(won==false)
            {
                result.setText("GAME TIED");
                getWinner(playerCnt);
            }
        }
    }//GEN-LAST:event_bt7ActionPerformed

    private void bt8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt8ActionPerformed
        // TODO add your handling code here:
        if(value(2,1).equals("") && count<9){
            if(playerCnt==1){
                bt8.setText("X");
                playerCnt++;
            }else{
                bt8.setText("O");
                playerCnt=1;
            }
            count++;
            if(checkHorizontal(2,1)){
                result.setText(getWinner(playerCnt)+" WINS");
                count=10;
            }else if(checkVertical(2,1)){
                result.setText(getWinner(playerCnt)+" WINS");
                count=10;
            }
            
            if(count<9)
                setPlayer(playerCnt);
           else if(won==false)
            {
                result.setText("GAME TIED");
                getWinner(playerCnt);
            }
        }
    }//GEN-LAST:event_bt8ActionPerformed

    private void bt9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt9ActionPerformed
        // TODO add your handling code here:
        if(value(2,2).equals("") && count<9){
            if(playerCnt==1){
                bt9.setText("X");
                playerCnt++;
            }else{
                bt9.setText("O");
                playerCnt=1;
            }
            count++;
            if(checkHorizontal(2,2)){
                result.setText(getWinner(playerCnt)+" WINS");
                count=10;
            }else if(checkVertical(2,2)){
                result.setText(getWinner(playerCnt)+" WINS");
                count=10;
            }else if(checkMainDiagnol(2,2)){
               result.setText(getWinner(playerCnt)+" WINS");
                count=10; 
            }
            
            if(count<9)
                setPlayer(playerCnt);
            else if(won==false)
            {
                result.setText("GAME TIED");
                getWinner(playerCnt);
            }
        }
    }//GEN-LAST:event_bt9ActionPerformed

    private void restartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_restartActionPerformed
        // TODO add your handling code here:
        for(int i=0;i<3;++i){
            for(int j=0;j<3;++j)
                btArr[i][j].setText("");
        }
        count=0;
        playerCnt=1;
        won=false;
        setPlayer(playerCnt);
        restart.setVisible(false);
        result.setText("");
    }//GEN-LAST:event_restartActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CrossZero.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CrossZero.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CrossZero.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CrossZero.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        CrossZero obj=new CrossZero();

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                obj.setVisible(true);
            }
        });
        
        
        
    }
    
    boolean checkHorizontal(int x,int y){
        String pivot=value(x,y);
        boolean flag=true;
        for(int i=0;i<3;++i){
            if(i==y)
                continue;
            if(!value(x,i).equals(pivot)){
                flag=false;
                break;
            }
        }
        return flag;
    }
    
    boolean checkVertical(int x,int y){
       String pivot=value(x,y);
        boolean flag=true;
        for(int i=0;i<3;++i){
            if(i==x)
                continue;
            if(!value(i,y).equals(pivot)){
                flag=false;
                break;
            }
        }
        return flag; 
    }
    
    boolean checkMainDiagnol(int x,int y){
        String pivot=value(x,y);
        boolean flag=true;
        for(int i=0;i<3;++i){
            if(i==x)
                continue;
            if(!value(i,i).equals(pivot)){
                flag=false;
                break;
            }
        }
        return flag;
    }
    
    boolean checkTDiagnol(int x,int y){
        String pivot=value(x,y);
        boolean flag=true;
        for(int i=0;i<3;++i){
            if(i==x)
                continue;
            if(!value(i,3-i-1).equals(pivot)){
                flag=false;
                break;
            }
        }
        return flag;
    }
    
    String value(int i,int j){
        return btArr[i][j].getText();
    }
    
    String getWinner(int c){
        won=true;
        restart.setVisible(true);
        player.setText("");
        if(c==2)
            return "Player 1";
        else if(c==1)
            return "Player 2";
        else
        {
            won=false;
            return null;
        }
    }
    
    void setPlayer(int c){
        if(c==1)
            player.setText("Player 1");
        else
            player.setText("Player 2");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt1;
    private javax.swing.JButton bt2;
    private javax.swing.JButton bt3;
    private javax.swing.JButton bt4;
    private javax.swing.JButton bt5;
    private javax.swing.JButton bt6;
    private javax.swing.JButton bt7;
    private javax.swing.JButton bt8;
    private javax.swing.JButton bt9;
    private javax.swing.JButton btStart;
    private javax.swing.JLabel player;
    private javax.swing.JButton restart;
    private javax.swing.JLabel result;
    // End of variables declaration//GEN-END:variables
}
